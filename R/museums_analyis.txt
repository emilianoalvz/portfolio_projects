library(plotrix)
library(tidyverse)

## GETTING TO KNOW THE DATA

#1. Load file as data frame
museums <- read_csv("C:/Users/Admin/Desktop/R/museums_separated.csv")

#2. Inspect data frame
head(museums)
colnames(museums)

## MUSEUMS BY TYPE

#3. Create and print bar plot by type
#4. Adjust the scale_x_discrete (scales::wrap_format(8) -> max width p/ line = 8 characters)
museum_type <- ggplot(museums, aes(x= Museum.Type)) + geom_bar() +
  scale_x_discrete(labels = scales::wrap_format(8)) +
  geom_text(aes(label = ..count..), stat = 'count', vjust = -0.2, colour = "black") 
  #ylim(0, max(..count..)*1.2) #adjusting y limit to be a little higher #ERROR in limits(c(...), "y") : object '..count..' not found
  #when using *geom_bar*, to add the data labels to the cols: aes(label = ..count..), stat= 'count'
  #when using *geom_col*, use the field of aes(y=field)
  #in geom_text: Below the top: vjust=1.5. Above the top: vjust = -0.2

museum_type

#5. Create and print bar plot by museum vs non-museum
# Counting Museums vs. Non-Museums 
mvsnm <- count(museums, Is.Museum)
# mvsnm
museum <- nrow(subset(museums, Is.Museum == TRUE))
# museum # =4981
nonmus <- nrow(subset(museums, Is.Museum == FALSE))
# nonmus # =6881

museum_class <- ggplot(museums, aes(x= Is.Museum)) + geom_bar() + 
  scale_x_discrete(labels = c('TRUE' = 'Museum', 'FALSE'= 'Non-Museum')) + 
  geom_text(aes(label= ..count..),  stat='count', vjust = 1.5, colour = "white") + 
  labs(title = 'Museum vs Non-museums')
museum_class



#6. Filter data frame by some states, and Create a bar plot with facets
museums_states <- filter(museums, State..Administrative.Location. %in% c('IL', 'CA', 'NY'))
museum_facet <- ggplot(museums_states, aes(x= Is.Museum)) + geom_bar() + 
  scale_x_discrete(labels = c('TRUE' = 'Museum', 'FALSE'= 'Non-Museum')) +
  facet_grid(~State..Administrative.Location.) +
  geom_text(aes(label = ..count..), stat = 'count', vjust= 1.5, color = 'white') +
  labs(title = 'Museums vs Non-museums by States')
museum_facet

#7. Create and print stacked bar plot by region
#8. Rename the x axis numeric labels to text 
#9. Show Percent instead of Count in y axis. (scales::percent_format())
#10. Relabel the axes to make them more descriptive 
museum_stacked <- ggplot(museums, aes(x= factor(Region.Code..AAM.), fill=Is.Museum)) + #factor() so ggplot2 plots its levels as discrete rather than continuous values
  geom_bar(position = 'fill') + #changes from 0 to 1 in quartiles (0.00, 0.25...)
  scale_x_discrete(
    labels = c(
      "1"="New England",
      "2"="Mid-Atlantic",
      "3"="Southeastern",
      "4"="Midwest",
      "5"="Mountain Plains",
      "6"="Western"
    )
  ) +
  scale_y_continuous(labels = scales::percent_format()) + #from 0-1 to 0-100%
  labs(title = "Museum Types by Region",
       x = "Region",
       y = "Percentage of Total", #instead of the automatic 'count' of geom_bar
       fill = "Type")

museum_stacked

## Exploring Institutions by Revenue 

#11. Creating a filtered data frame with unique(distinct) 'Legal.Name' institutions.
# Then filter a museums_small_df, and then museums_large_df 
museums_revenue <- distinct(museums, Legal.Name, .keep_all = TRUE) %>%  #.keep_all=TRUE to retain all cols. rather than the one column we want to check uniqueness for
  filter(Annual.Revenue > 0)
head(museums_revenue)

museums_small_df <- filter(museums_revenue, Annual.Revenue < 1000000)

museums_large_df <- filter(museums_revenue, Annual.Revenue >= 1000000)

#12. Distribution of annual revenue for our small museums dataset (histogram)
#13. Formatting x-axis, with scales::dollar_format()
revenue_histogram <- ggplot(museums_small_df, aes(x= Annual.Revenue)) +
  geom_histogram(color = 'darkgray', fill = 'white', binwidth = 160000) +
  scale_x_continuous(labels = scales::dollar_format()) + #dollar_format() is a fx from the scales library included in ggplot2 that adds dollar signs and commas to monetary data.
  labs(x= 'Annual Revennue', 
       title = "Distribution of Annual Revennue for Small Museums") +
  geom_vline(aes(xintercept = mean(museums_small_df$Annual.Revenue), color='mean'),
             show.legend = TRUE, size = 1) 
revenue_histogram

#14. Boxplot for Large Museums 
#15. Zooming to check the outlier. Zoom-in on the y axis between $1B and $30B
#16. Reformat y axis as Billions; display '10B' instead of '1e+10' (1B = 1e9)
revenue_boxplot <- ggplot(museums_large_df, 
                          aes(x= factor(Region.Code..AAM.), y= Annual.Revenue)) + #factor() so ggplot2 plots its levels as discrete rather than continuous values
  geom_boxplot() +
  labs(x= 'Region Code AAM') + 
  scale_x_discrete(labels = c(
      "1"="New England",
      "2"="Mid-Atlantic",
      "3"="Southeastern",
      "4"="Midwest",
      "5"="Mountain Plains",
      "6"="Western"
    )
  ) + 
  coord_cartesian(ylim = c(1e9, 3e10)) + #Setting limits on the coordinate system to zoom the plot 
  scale_y_continuous(labels = function(x) paste0("$", x/1e9, "B")) 
  #function(x) = "anonymous functions", they are real function objects, that have not been assigned to any symbol before being used
  #paste0() is used to concatenate all elements without separator 
revenue_boxplot


#17. Looking at revenue across all museums
#18. Label correctly the axes 
revenue_barplot <- ggplot(museums_revenue, aes(x= factor(Region.Code..AAM.), 
                                               y= Annual.Revenue)) +
  geom_bar(stat = 'summary', fun = 'mean') + #stat='summary' + fun='mean' is to show a summary based on the mean, in this case, to display the mean revenue by region
  labs(title = 'Mean Annual Revenue by Region', 
       x= 'Region', 
       y= "Mean Annual Revenue") +
  scale_x_discrete(labels = c(
    "1"="New England",
    "2"="Mid-Atlantic",
    "3"="Southeastern",
    "4"="Midwest",
    "5"="Mountain Plains",
    "6"="Western"
  )) + 
  scale_y_continuous(labels = function(x) paste0("$", x/1e6, "K"))

revenue_barplot

#19. Adding standard error lines to the means 
museums_error_df <- museums_revenue %>%
  group_by(Region.Code..AAM.) %>%
  summarize(
    Mean.Revenue = mean(Annual.Revenue), 
    Mean.SE = std.error(Annual.Revenue)) %>%
  mutate(
    SE.Min = Mean.Revenue - Mean.SE, 
    SE.Max = Mean.Revenue + Mean.SE)

Mean.Revenue = mean(museums_revenue$Annual.Revenue)
Mean.SE = std.error(museums_revenue$Annual.Revenue)
SE.Min = Mean.Revenue - Mean.SE
SE.Max = Mean.Revenue + Mean.SE

revenue_errorbar <- ggplot(museums_revenue, aes(x= factor(Region.Code..AAM.), 
                                                y= Mean.Revenue)) +
  geom_bar(stat = 'identity') + #stat='identity' to display values as is rather than counting them 
  labs(title = 'Mean Errors of the Annual Revenue by Region', 
       x= 'Region', 
       y= "Mean Annual Revenue") +
  scale_x_discrete(labels = c(
    "1"="New England",
    "2"="Mid-Atlantic",
    "3"="Southeastern",
    "4"="Midwest",
    "5"="Mountain Plains",
    "6"="Western"
  )) + 
  scale_y_continuous(labels = function(x) paste0("$", x/1e10, "B")) +
  geom_errorbar(aes(ymin= SE.Min, ymax= SE.Max), width= 0.2)

revenue_errorbar


## Additional insights 

#Museums by Region 
mus_per_regions <- distinct(museums, Legal.Name, .keep_all = TRUE) %>%  
  ggplot(aes(x= (factor(Region.Code..AAM.)))) +
  geom_bar() + 
  scale_x_discrete(
    labels = c(
      "1"="New England",
      "2"="Mid-Atlantic",
      "3"="Southeastern",
      "4"="Midwest",
      "5"="Mountain Plains",
      "6"="Western"
    )
  ) + 
  geom_text(aes(label= ..count..), stat= 'count', vjust =1.5, color= 'white') + 
  labs(title = 'Museums per Region', x= 'Region')
mus_per_regions


